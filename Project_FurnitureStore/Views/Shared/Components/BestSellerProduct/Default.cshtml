@model IEnumerable<Project_FurnitureStore.Models.SanPhamViewModel>

<div class="f">
	<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
		<div class="carousel-inner">
			@{
				int totalCount = Model.Count();
				int itemsPerSlide = 4;
				int slideCount = (int)Math.Ceiling((double)totalCount / itemsPerSlide);
				int loopCount = 0;

				for (int slideIndex = 0; slideIndex < slideCount; slideIndex++)
				{
					<text>
						<div class="carousel-item @(slideIndex == 0 ? "active" : "")">
							<div class="cards-wrapper dm">
								<div class=" h-[380px] px-10">
									<div class="grid grid-cols-4 gap-x-3 ">
										@for (int i = loopCount; i < totalCount && i < loopCount + itemsPerSlide; i++)
										{
											var item = Model.ElementAt(i);
											<a href="@Url.Action("DetailProduct","Product", new{ @idProduct=item.id})">
											<div class="bg-white border-2 border-black h-[380px] w-full rounded-lg p-[10px]">
												<img class="w-full h-[200PX]    rounded-lg" src="./Images/@item.Hinh">
												<div class="flex items-center ">
													<button id="favoriteButton1" class="ml-auto mr-[8px] text-black hover:text-red-500  translate-y-6 ">
														<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
															<path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />
														</svg>
													</button>
												</div>
												<div class="font-Raleway text-[15px] translate-x-6">
													@if (item.TenSP.Length > 16)
													{
														@item.TenSP.Substring(0, 16)
													}
													else
													{
														@item.TenSP
													}
												</div>
												<div class=" font-bold red-text translate-x-6 ">@item.DonGia.ToString("C0")</div>
												<div class="mt-3 flex -space-x-2 overflow-hidden">
													@foreach (var color in item.MauSac)
													{
												<div style="background-color:@(color.ToLower())" class="translate-x-6  inline-block ring-2 ring-white rounded-full h-4 w-5"></div>
													}
												</div>
												<button class="buy-button text-center  h-[30px]   px-5 w-full">See More</button>
											</div>
											</a>
										}
										@if (loopCount < totalCount)
										{
											loopCount += itemsPerSlide;
										}
										else
										{
											break;
										}
									</div>
								</div>
							</div>
						</div>
					</text>
				}
			}
		</div>
		<a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
			<span class="carousel-control-prev-icon" aria-hidden="true"></span>
			<span class="sr-only">Previous</span>
		</a>
		<a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
			<span class="carousel-control-next-icon" aria-hidden="true"></span>
			<span class="sr-only">Next</span>
		</a>
	</div>
</div>